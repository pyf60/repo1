<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
        <!--
            spring依赖注入
            Dependence Injection
            IOC的作用
                叫做削减（降低）程序间的依赖关系（耦合）
            依赖关系的管理：以后交给spring管理
            在当前类需要用到其他类的对象，由spring提供，只需要在配置文件中说明
            依赖关系的维护：依赖注入
            依赖注入：
                能注入的数据有三种：
                    基本数据和string
                    其他的bean类型，（在配置文件中和注解配置过的bean）
                    复杂类型和集合类型
                注入大方式：
                    第一种：使用构造函数提供
                    第二种：使用set方法提供
                    第三种：使用注解提供
        -->
<!--    构造函数注入
        使用的标签：constructor-arg
        标签出现的位置：bean标签的内部
        标签中的属性：
            type：用于指定要注入的数据数据类型，该数据类型也是，也是构造函数中某个或某些参数的类型
            index：用于指定要要注入的数据给构造函数中指定索引位置的参数复制。索引的位置从0开始
            name：用于指定给构造函数中指定名称的参数赋值         最常用

            value：用于给基本类型和string类型的数据类型
            ref：用于指定其他的bean类型数据，他指的就是在spring的ioc核心容器出现过的bean对象
    优势：在获取bean对象时，注入数据是必须 的操作，否者无法创建成功
    弊端：改变了bean对象实例化方式，使我们在创建对象时，用不到这些数据也必须提供

-->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="zhangsan"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>

<!--    配置一个id对象-->
    <bean id="now" class="java.util.Date"></bean>
    <!--set注入
    优势：创建对象没有明确的限制可以直接使用默认构造函数
    弊端：如果有某个成员必须有值，set方法无法保证在获取对象时set方法无法执行

    -->
    <bean id="accountService2" class="com.itheima.service.impl.AccountServiceImpl2">
        <property name="name" value="TEST"></property>
        <property name="age" value="12"></property>
        <property name="birthday" ref="now"></property>


    </bean>


<!--    复杂类型注入/集合类型-->
    <bean id="accountService3" class="com.itheima.service.impl.AccountServiceImpl3">
        <property name="myStrs">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </array>
        </property>

     <property name="myList">
         <list>
             <value>DDD</value>
             <value>EEE</value>
             <value>FFF</value>
         </list>
     </property>
        <property name="myMap">
            <map>
                <entry key="testA" value="AAA">
                </entry>
            </map>
        </property>

    </bean>
</beans>


